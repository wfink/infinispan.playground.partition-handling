<?xml version="1.0"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.infinispan.wfink</groupId>
    <artifactId>EmbeddedWebApplicationWithPartitionHandling</artifactId>
    <version>2.0</version>
    <packaging>war</packaging>
    <name>embedded:  Simple web application with clustered cache XML configuration and partition handling</name>
    <description>An application with an embedded Infinispan cache with partition handling enabled</description>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>
    <properties>
    <!-- Explicitly declaring the source encoding eliminates the following message: -->
    <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
      resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <version.server.bom>7.2.0.GA</version.server.bom>
        <version.jboss.spec.javaee.6.0>3.0.2.Final-redhat-4</version.jboss.spec.javaee.6.0>

        <version.org.infinispan>11.0.0.Final</version.org.infinispan>
        <!-- JDG 7.3.0
                     <version.org.infinispan>9.4.6.Final-redhat-00002</version.org.infinispan>
        -->

        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <version.compiler.plugin>3.1</version.compiler.plugin>

        <version.exec.plugin>1.6.0</version.exec.plugin>
        <version.war.plugin>3.0.0</version.war.plugin>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-bom</artifactId>
                <version>${version.org.infinispan}</version>
                <type>pom</type>
            </dependency>
            <!-- Define the version of JBoss' Java EE 7 APIs we want to import. Any 
              dependencies from org.jboss.spec will have their version defined by this 
              BOM -->
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-javaee8-with-tools</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.infinispan</groupId>
                    <artifactId>infinispan-core</artifactId>
                </exclusion>
            </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- this use only the minimal dependency to core which is needed -->
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <!-- this version reference is needed to ensure the EAP dependencies are not used! -->
            <version>${version.org.infinispan}</version>
            <!--  use provided prevent from having the infinispan dependencies in 'WEB-INF/lib' folder
                  Possible if RHDG Modules are used in WildFly or EAP
            <scope>provided</scope>
            -->
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_4.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
           <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>PartitionHandling20</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
<!--                    Enable to use the RHDG modules added to the EAP installation; Infinispan dependency must use scope==provided to not include the jar files in the war application
                        <manifestEntries>
                            <Dependencies>org.infinispan:jdg-7.3 services</Dependencies>
                        </manifestEntries>
-->
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>

